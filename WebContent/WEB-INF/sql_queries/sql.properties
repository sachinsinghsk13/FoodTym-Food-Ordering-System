# This file contain various sql queries that used with Prepared Statement.

# Following are FoodTym Statistics Related Queries.

FOODTYM_STATS_TOTAL_RESTAURANTS = SELECT COUNT(*) FROM Restaurants;
FOODTYM_STATS_TOTAL_FOOD_ITEM = SELECT COUNT(*) FROM FoodItems;
FOODTYM_STATS_TOTAL_CUSTOMERS = SELECT COUNT(*) FROM Customers;
FOODTYM_STATS_TOTAL_LOCALITY = SELECT COUNT(*) FROM Localities;
FOODTYM_STATS_TOTAL_WAITING_ORDERS = SELECT COUNT(*) FROM Orders WHERE OrderStatus = 'OUT_FOR_DELIVERY';
FOODTYM_STATS_TOTAL_DELIVERY_PERSON = SELECT COUNT(*) FROM DeliveryPersons;


# Query for getting the ID of  last inserted row in table.

LAST_INSERT_ID = SELECT LAST_INSERT_ID();

# Following are the Admin Login Related Queries.

FOODTYM_ADMIN_LOGIN_CHECK = SELECT AdminID, FirstName, LastName, Username, Password FROM FoodTymAdmin WHERE Username = ? AND Password = SHA1(?);

# Restaurant Owner Related Queries.

INSERT_RESTAURANT_OWNER = INSERT INTO RestaurantOwners (FirstName, LastName, DOB, Gender,Picture , MobileNumber, EmailAddress, Address) values (?,?,?,?,?,?,?,?);
GET_RESTAURANT_OWNER = SELECT RestaurantOwnerID, FirstName, LastName, DOB, Gender,MobileNumber, EmailAddress, Address FROM RestaurantOwners WHERE RestaurantOwnerID = ?;
GET_RESTAURANT_OWNER_PICTURE = SELECT Picture FROM RestaurantOwners WHERE RestaurantOwnerID = ?;

# Restaurant Related Queries.
INSERT_RESTAURANT = INSERT INTO Restaurants (Name, LocalityID, Banner, FSSAIRegistrationNumber, Note, RestaurantOwnerID, Address, OpenTime, CloseTime, RegistrationDate, RegistrationAmount, Password , MobileNumber , EmailAddress) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, DATE(NOW()), ?, SHA1(?), ?, ?);
GET_RESTAURANT_BANNER = SELECT Banner FROM Restaurants WHERE RestaurantID = ?;
GET_RESTAURANT = SELECT Name, LocalityID , FSSAIRegistrationNumber , Note, RestaurantOwnerID , Address , OpenTime , CloseTime , RegistrationDate , RegistrationAmount , MobileNumber , EmailAddress  FROM Restaurants WHERE RestaurantID = ?;
SEARCH_RESTAURANT_BY_NAME = SELECT restaurants.RestaurantID, CONCAT(restaurantowners.FirstName," ", restaurantowners.LastName) AS OwnerName, restaurants.Name, localities.LocalityName,ncrregions.NcrRegionName FROM restaurants join restaurantowners using(RestaurantOwnerID) join localities using (LocalityID) join ncrregions using (NcrRegionID) WHERE restaurants.Name LIKE ? OR restaurants.Name LIKE ?;
SEARCH_RESTAURANT_BY_LOCALITY = SELECT restaurants.RestaurantID, CONCAT(restaurantowners.FirstName," ", restaurantowners.LastName) AS OwnerName, restaurants.Name, localities.LocalityName,ncrregions.NcrRegionName FROM restaurants join restaurantowners using(RestaurantOwnerID) join localities using (LocalityID) join ncrregions using (NcrRegionID) WHERE localities.LocalityName = ? AND ncrregions.NcrRegionName = ?;
SEARCH_RESTAURANT_BY_ID = SELECT restaurants.RestaurantID, CONCAT(restaurantowners.FirstName," ", restaurantowners.LastName) AS OwnerName, restaurants.Name, localities.LocalityName,ncrregions.NcrRegionName FROM restaurants join restaurantowners using(RestaurantOwnerID) join localities using (LocalityID) join ncrregions using (NcrRegionID) WHERE restaurants.RestaurantID = ?;
# Locality Related Queries.

FIND_NCR_REGION_ID = SELECT NcrRegionID FROM NcrRegions WHERE NcrRegionName = ?;
INSERT_NCR_REGION = INSERT INTO NcrRegions (NcrRegionName) VALUES (?);
FIND_LOCALITY_ID = SELECT LocalityID FROM Localities WHERE LocalityName = ? AND NcrRegionID = ?;
INSERT_LOCALITY = INSERT INTO Localities (LocalityName,NcrRegionID) VALUES (?,?);
GET_LOCALITY = SELECT NcrRegionID , NcrRegionName , LocalityName from NcrRegions INNER JOIN Localities USING (NcrRegionID) WHERE LocalityID = ?;
SEARCH_LOCALITY_IN_NCR_REGION = SELECT NcrRegionID , LocalityID , NcrRegionName, LocalityName FROM  Localities INNER JOIN NcrRegions using (NcrRegionID) WHERE NcrRegionName = ? AND (LocalityName LIKE  ? OR  LocalityName LIKE  ?) ORDER BY LocalityName ;
SEARCH_NCR_REGION = SELECT NcrRegionID , NcrRegionName FROM  NcrRegions WHERE NcrRegionName LIKE  ? OR  NcrRegionName LIKE  ? ORDER BY NcrRegionName;
SEARCH_LOCALITY = SELECT NcrRegionID , LocalityID , NcrRegionName, LocalityName FROM  Localities INNER JOIN NcrRegions using (NcrRegionID) WHERE LocalityName LIKE  ? OR  LocalityName LIKE  ? ORDER BY LocalityName;
GET_LOCALITY_ID = SELECT LocalityID from NcrRegions INNER JOIN Localities USING (NcrRegionID) WHERE LocalityName = ? AND NcrRegionName = ?;

# Delivery Person Related Queries.
INSERT_DELIVERY_PERSON = INSERT INTO DeliveryPersons  (FirstName, LastName, DOB,Picture, Salary, VehicalNumber,  Address, MobileNumber, EmailAddress, Password, FatherName, Gender , JoinDate , CommissionSalary , Note) values (?,?,?,?,?,?,?,?,?,SHA1(?),?,?,DATE(NOW()),?,?);
GET_DELIVERY_PERSON = SELECT FirstName , LastName , DOB , Picture, Salary , VehicalNumber , Address, MobileNumber, EmailAddress, FatherName, Gender, JoinDate, CommissionSalary, Note FROM DeliveryPersons WHERE DeliveryPersonID = ?;
GET_DELIVERY_PERSON_PICTURE = SELECT Picture FROM DeliveryPersons WHERE DeliveryPersonID = ?;

# Delivery Area Related Queries

GET_DELIVERY_AREA_ID = SELECT DeliveryAreaID FROM DeliveryAreas WHERE LocalityID = ? AND DeliveryPersonID = ?;
INSERT_DELIVERY_AREA = INSERT INTO DeliveryAreas (LocalityID , DeliveryPersonID) values (?,?);
GET_DELIVERY_AREAS_OF_DELIVERY_PERSON = SELECT da.DeliveryAreaID ,cl.NcrRegionName,cl.LocalityName FROM DeliveryAreas AS da INNER JOIN (SELECT NcrRegionName , LocalityName , LocalityID FROM  NcrRegions INNER JOIN Localities USING (NcrRegionID)) AS cl USING(LocalityID) WHERE da.DeliveryPersonID = ?;

# Food Item or Category related queries.

GET_FOOD_CATEGORY_ID = SELECT FoodCategoryID FROM FoodCategories WHERE Name = ?;
INSERT_FOOD_CATEGORY = INSERT INTO FoodCategories (Name) VALUES (?);
GET_FOOD_SUB_CATEGORY_ID = SELECT FoodSubCategoryID FROM FoodSubCategories WHERE FoodCategoryID = ? AND Name = ?;
INSERT_FOOD_SUB_CATEGORY = INSERT INTO FoodSubCategories (FoodCategoryID,Name) VALUES (?,?);
GET_FOOD_CATEGORY_BY_SUB_CATEGORY_ID = SELECT FoodCategories.FoodCategoryID , FoodCategories.Name , FoodSubCategories.FoodSubCategoryID , FoodSubCategories.Name FROM FoodCategories INNER JOIN FoodSubCategories using (FoodCategoryID) WHERE FoodSubCategoryID = ?;
SEARCH_FOOD_SUBCATEGORY = SELECT foodsubcategories.Name FROM foodcategories INNER JOIN foodsubcategories USING (FoodCategoryID) WHERE FoodCategories.Name = ? AND (foodsubcategories.name LIKE ? OR foodsubcategories.name LIKE ?);
GET_ALL_CATEGORIES = SELECT FoodCategories.name from FoodCategories;


INSERT_FOOD_ITEM = INSERT INTO FoodItems (FoodSubCategoryID,Title,FoodItemDescription,RestaurantID,Image,PriceBasis,PreparingTime,FoodType) VALUES (?,?,?,?,?,?,?,?);
INSERT_FOOD_ITEM_PRICE = INSERT INTO FoodItemPrices (FoodItemID,PriceType,RestaurantPrice,FoodTymPrice,Quantity) VALUES (?,?,?,?,?);
GET_FOOD_ITEMS_OF_RESTAURANT = SELECT fi.FoodItemID,fi.Title,fc.Name AS category, fsc.Name AS subcategory, fi.FoodItemDescription,fi.PriceBasis,fi.PreparingTime,fi.FoodType FROM FoodItems AS fi INNER JOIN FoodCategories AS fc INNER JOIN FoodSubCategories AS fsc USING (FoodCategoryID) WHERE fi.FoodSubCategoryID = fsc.FoodSubCategoryID AND fi.RestaurantID = ?;
GET_FOOD_ITEM_PRICE_DETAILS = SELECT PriceType,RestaurantPrice,FoodTymPrice,Quantity FROM FoodItemPrices WHERE FoodItemID = ?;
GET_FOOD_ITEM_THUMB = SELECT Image FROM FoodItems WHERE FoodItemID = ?;




